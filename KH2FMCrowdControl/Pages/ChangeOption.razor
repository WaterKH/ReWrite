@using KH2FMCrowdControl.Data
@using Waterkh.Common.Memory

@inject MemoryService MemoryService


<div class="input-group" style="padding: 5px">
    <div class="input-group-prepend" style="width: 60%">
        <span class="input-group-text" style="width: 100%">Update @(string.IsNullOrEmpty(SubOptionName) ? OptionName : SubOptionName) Cost & IsActive</span>
    </div>
    @if (Cost == 0)
    { 
        <select class="form-select" @bind="@Cost">
            <option value="0">0</option>
        </select>
    }
    else
    {
        <select class="form-select" @bind="@Cost" @oninput="UpdateOptionCost">
            @foreach (var costCooldown in MemoryService.OptionCooldowns[HostName])
            {
                if (costCooldown.Key == Cost)
                {
                    <option value="@costCooldown.Key" selected>@costCooldown.Key</option>
                }
                else
                {
                    <option value="@costCooldown.Key">@costCooldown.Key</option>
                }
            }
        </select>
    }
    <input type="checkbox" class="form-control" style="width: 20%;" checked="@IsActive" @bind-value="@IsActive" @oninput="UpdateOptionIsActive">
</div>

@code {
    [Parameter]
    public string HostName { get; set; }

    [Parameter]
    public GroupType Category { get; set; }

    [Parameter]
    public string OptionName { get; set; }

    [Parameter]
    public string SubOptionName { get; set; }

    [Parameter]
    public int Cost { get; set; }

    [Parameter]
    public bool IsActive { get; set; }



    public async Task UpdateOptionCost(ChangeEventArgs args)
    {
        await MemoryService.UpdateOption(HostName, Category, OptionName, SubOptionName, int.Parse(args.Value.ToString()));
    }

    public async Task UpdateOptionIsActive(ChangeEventArgs args)
    {
        await MemoryService.UpdateOption(HostName, Category, OptionName, SubOptionName, (bool)args.Value);
    }
}